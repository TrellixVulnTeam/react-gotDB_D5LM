{"ast":null,"code":"export default class GotService {\n  constructor() {\n    this.getResource = async url => {\n      const res = await fetch(`${this._apiBase}${url}`);\n\n      if (!res.ok) {\n        throw new Error(`Could not fetch ${url}, status: ${res.status}`);\n      }\n\n      return await res.json();\n    };\n\n    this.getAllCharacters = async () => {\n      const res = await this.getResource(`/characters?page=5&pageSize=10`);\n      return res.map(this._transformCharacter);\n    };\n\n    this.getCharacter = async id => {\n      const character = await this.getResource(`/characters/${id}`);\n      return this._transformCharacter(character);\n    };\n\n    this.getAllHouses = async () => {\n      const houses = await this.getResource(`/houses/`);\n      return houses.map(this._transformHouse);\n    };\n\n    this.getHouse = async id => {\n      const house = await this.getResource(`/houses/${id}/`);\n      return this._transformHouse(house);\n    };\n\n    this.getAllBooks = async () => {\n      const books = await this.getResource(`/books/`);\n      return books.map(this._transformBook);\n    };\n\n    this.getBook = async id => {\n      const book = await this.getResource(`/books/${id}/`);\n      return this._transformBook(book);\n    };\n\n    this._extractId = item => {\n      const idRegExp = /\\/([0-9]*)$/;\n      return item.url.match(idRegExp)[1];\n    };\n\n    this._transformCharacter = char => {\n      return {\n        id: this._extractId(char),\n        name: this.isSet(char.name),\n        gender: this.isSet(char.gender),\n        born: this.isSet(char.born),\n        died: this.isSet(char.died),\n        culture: this.isSet(char.culture)\n      };\n    };\n\n    this._transformHouse = house => {\n      return {\n        id: this._extractId(house),\n        name: this.isSet(house.name),\n        region: this.isSet(house.region),\n        words: this.isSet(house.words),\n        titles: this.isSet(house.titles),\n        overlord: this.isSet(house.overlord),\n        ancestralWeapons: this.isSet(house.ancestralWeapons)\n      };\n    };\n\n    this._transformBook = book => {\n      return {\n        id: this._extractId(book),\n        name: this.isSet(book.name),\n        numberOfPages: this.isSet(book.numberOfPages),\n        publisher: this.isSet(book.publisher),\n        released: this.isSet(book.released)\n      };\n    };\n\n    this._apiBase = 'https://www.anapioficeandfire.com/api';\n  }\n\n  isSet(data) {\n    if (data) {\n      return data;\n    } else {\n      return 'no data!';\n    }\n  }\n\n}","map":{"version":3,"sources":["/home/acer/VisualCodeProjects/reactLessons/2/react-2/react-app/src/services/gotServices.js"],"names":["GotService","constructor","getResource","url","res","fetch","_apiBase","ok","Error","status","json","getAllCharacters","map","_transformCharacter","getCharacter","id","character","getAllHouses","houses","_transformHouse","getHouse","house","getAllBooks","books","_transformBook","getBook","book","_extractId","item","idRegExp","match","char","name","isSet","gender","born","died","culture","region","words","titles","overlord","ancestralWeapons","numberOfPages","publisher","released","data"],"mappings":"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","sourcesContent":["export default class GotService {\n\n    constructor() {\n        this._apiBase = 'https://www.anapioficeandfire.com/api';\n    }\n\n    getResource = async (url) => {\n        const res = await fetch(`${this._apiBase}${url}`);\n\n        if (!res.ok) {\n            throw new Error(`Could not fetch ${url}, status: ${res.status}`);\n        }\n\n        return await res.json();\n    }\n\n    getAllCharacters = async () => {\n        const res = await this.getResource(`/characters?page=5&pageSize=10`);\n        return res.map(this._transformCharacter);\n    }\n\n    getCharacter = async (id) => {\n        const character = await this.getResource(`/characters/${id}`);\n        return this._transformCharacter(character);\n    }\n\n    getAllHouses = async () => {\n        const houses = await this.getResource(`/houses/`);\n        return houses.map(this._transformHouse);\n    }\n\n    getHouse = async (id) => {\n        const house = await this.getResource(`/houses/${id}/`);\n        return this._transformHouse(house);\n    }\n\n    getAllBooks = async () => {\n        const books = await this.getResource(`/books/`);\n        return books.map(this._transformBook);\n    }\n\n    getBook = async (id) => {\n        const book = await this.getResource(`/books/${id}/`);\n        return this._transformBook(book);\n    }\n\n    isSet(data) {\n        if (data) {\n            return data;\n        } else {\n            return 'no data!';\n        }\n    }\n\n    _extractId = (item) => {\n        const idRegExp = /\\/([0-9]*)$/;\n        return item.url.match(idRegExp)[1];\n    }\n\n    _transformCharacter = (char) => {\n        return {\n            id: this._extractId(char),\n            name: this.isSet(char.name),\n            gender: this.isSet(char.gender),\n            born: this.isSet(char.born),\n            died: this.isSet(char.died),\n            culture: this.isSet(char.culture)\n        }\n    }\n\n    _transformHouse = (house) => {\n        return {\n            id: this._extractId(house),\n            name: this.isSet(house.name),\n            region: this.isSet(house.region),\n            words: this.isSet(house.words),\n            titles: this.isSet(house.titles),\n            overlord: this.isSet(house.overlord),\n            ancestralWeapons: this.isSet(house.ancestralWeapons)\n        }\n    }\n\n    _transformBook = (book) => {\n        return {\n            id: this._extractId(book),\n            name: this.isSet(book.name),\n            numberOfPages: this.isSet(book.numberOfPages),\n            publisher: this.isSet(book.publisher),\n            released: this.isSet(book.released)\n        }\n    }\n}"]},"metadata":{},"sourceType":"module"}