{"version":3,"sources":["components/header/index.js","components/header/header.js","services/gotServices.js","components/spinner/index.js","components/spinner/spinner.js","components/errorMessage/img/logo192.png","components/errorMessage/index.js","components/errorMessage/errorMessage.js","components/randomChar/randomChar.js","components/randomChar/index.js","components/itemList/index.js","components/itemList/itemList.js","components/charDetails/index.js","components/charDetails/charDetails.js","components/app/index.js","components/app/app.js","index.js"],"names":["Header","className","href","GotService","_transformCharacter","char","name","isSet","gender","born","died","culture","_transformHouse","house","region","words","titles","overlord","ancestralWeapons","_transformBook","book","numberOfPages","publisher","released","this","_apiBase","url","a","fetch","res","ok","Error","status","json","getResource","map","id","character","houses","_transformHouses","books","_transformBooks","data","Spinner","ErrorMessage","src","img","alt","RandomChar","gotService","state","loading","error","onCharLoaded","setState","onError","updateCharacter","Math","floor","random","getCharacter","then","catch","console","log","timerId","setInterval","clearInterval","errorMessage","spinner","content","Component","View","ItemList","charList","renderItems","arr","item","i","onClick","props","onCharSelected","getAllCharacters","items","CharDetails","prevProps","charId","App","showRandomChar","selectedChar","toggleRandomChar","Container","Row","Col","lg","size","offset","md","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4ddf89a6.chunk.js","sourcesContent":["import Header from './header';\n\nexport default Header;","import React from 'react';\nimport './header.css';\n\nconst Header = () => {\n    return (\n        <div className=\"header\">\n            <h3 className=\"header-title\">\n                <a href=\"google.com\">\n                Game of Thrones DB\n                </a>\n            </h3>\n            <ul className=\"header-list\">\n                <li>\n                    <a href=\"google.com\">Characters</a>\n                </li>\n                <li>\n                    <a href=\"google.com\">Houses</a>\n                </li>\n                <li>\n                    <a href=\"google.com\">Books</a>   \n                </li>\n            </ul>\n        </div>\n    );\n};\n\nexport default Header;","export default class GotService {\n\n    constructor() {\n        this._apiBase = 'https://www.anapioficeandfire.com/api';\n    }\n\n    async getResource(url) {\n        const res = await fetch(`${this._apiBase}${url}`);\n\n        if (!res.ok) {\n            throw new Error(`Could not fetch ${url}, status: ${res.status}`);\n        }\n\n        return await res.json();\n    }\n\n    async getAllCharacters() {\n        const res = await this.getResource(`/characters?page=5&pageSize=10`);\n        return res.map(this._transformCharacter);\n    }\n\n    async getCharacter(id) {\n        const character = await this.getResource(`/characters/${id}`);\n        return this._transformCharacter(character);\n    }\n\n    async getAllHouses() {\n        const houses = await this.getResource(`/houses/`);\n        return houses.map(this._transformHouses);\n    }\n\n    async getHouse(id) {\n        const house = await this.getResource(`/houses/${id}/`);\n        return this.map(house);\n    }\n\n    async getAllBooks() {\n        const books = await this.getResource(`/books/`);\n        return books.map(this._transformBooks);\n    }\n\n    async getBook(id) {\n        const book = await this.getResource(`/books/${id}/`);\n        return this.map(book);\n    }\n\n    isSet(data) {\n        if (data) {\n            return data;\n        } else {\n            return 'no data!';\n        }\n    }\n\n    // _extractId = (item) => {\n    //     const idRegExp = /\\/([0-9]*)$/;\n    //     return item.url.match(idRegExp)[1];\n    // }\n\n    _transformCharacter = (char) => {\n        return {\n            // id: this._extractId(char),\n            name: this.isSet(char.name),\n            gender: this.isSet(char.gender),\n            born: this.isSet(char.born),\n            died: this.isSet(char.died),\n            culture: this.isSet(char.culture)\n        }\n    }\n\n    _transformHouse = (house) => {\n        return {\n            // id: this._extractId(char),\n            name: this.isSet(house.name),\n            region: this.isSet(house.region),\n            words: this.isSet(house.words),\n            titles: this.isSet(house.titles),\n            overlord: this.isSet(house.overlord),\n            ancestralWeapons: this.isSet(house.ancestralWeapons)\n        }\n    }\n\n    _transformBook = (book) => {\n        return {\n            // id: this._extractId(char),\n            name: this.isSet(book.name),\n            numberOfPages: this.isSet(book.numberOfPages),\n            publisher: this.isSet(book.publisher),\n            released: this.isSet(book.released)\n        }\n    }\n}","import Spinner from './spinner';\nexport default Spinner;","import React from 'react';\n\nimport './spinner.css';\n\nconst Spinner = () => {\n    return (\n\n        <div className=\"loadingio-spinner-spin-7a5z4meq86b\"> \n        <div className=\"ldio-az7fcjxuvd\">\n            <div>\n                <div></div></div><div><div></div></div><div><div></div></div><div><div></div></div><div><div></div></div><div><div></div></div><div><div></div></div><div><div></div></div>\n            </div></div>\n    )\n}\n\nexport default Spinner;\n\n","export default __webpack_public_path__ + \"static/media/logo192.b285dc75.png\";","import ErrorMessage from './errorMessage';\nexport default ErrorMessage;","import React from 'react';\n\nimport './errorMessage.css';\nimport img from './img/logo192.png';\nconst ErrorMessage = () => {\n    return (\n        <>\n            <img src={img} alt=\"Error\"/>\n            <span>Something goes wrong!!</span> \n        </>\n    )\n}\n\nexport default ErrorMessage;","import React, { Component } from 'react';\n// import './randomChar.css';\nimport gotService from '../../services/gotServices';\nimport Spinner from '../spinner';\nimport ErrorMessage from '../errorMessage';\n\nimport './randomChar.css';\n\nexport default class RandomChar extends Component {\n\n    gotService = new gotService();\n\n    state = {\n        char: {},\n        loading: true,\n        error: false\n    }\n\n    componentDidMount () {\n        console.log('mounting');\n        this.updateCharacter();\n        this.timerId = setInterval(this.updateCharacter, 5000);\n\n    }\n\n    componentWillUnmount () {\n        clearInterval(this.timerId);\n    }\n\n    onCharLoaded = (char) => {\n        this.setState({\n            char,\n            loading: false\n        });\n    }\n\n    onError = (error) => {\n        this.setState({\n            error: true,\n            loading: false\n        });\n    }\n\n    updateCharacter  = () => {\n\n        const id = Math.floor(Math.random() * 140 + 25);\n        // const id = 1300000;\n        \n        this.gotService.getCharacter(id)\n        .then(this.onCharLoaded)\n        .catch(this.onError);\n    }\n\n    render () {\n        console.log('render');\n\n        const {char, loading, error} = this.state;\n\n        const errorMessage = error ? <ErrorMessage/> : null;\n        const spinner = loading ? <Spinner/> : null;\n        const content = !(loading || error) ? <View char={char}/> : null;\n\n        return (\n            <div className=\"random-block rounded\">\n                {errorMessage}\n                {spinner}\n                {content}\n            </div>\n        )\n    }\n}\n\nconst View = ({char}) => {\n    const {name, gender, born, died, culture} = char;\n\n    return (\n        <>\n            <h4>RandomChar: {name}</h4>\n            <ul className=\"list-group list-group-flush\">\n                <li className=\"list-group-item d-flex justify-content-between\">\n                    <span className=\"term\">Gender: </span>\n                    <span>{gender}</span>\n                </li>\n                <li className=\"list-group-item d-flex justify-content-between\">\n                    <span className=\"term\">Born: </span>\n                    <span>{born}</span>\n                </li>\n                <li className=\"list-group-item d-flex justify-content-between\">\n                    <span className=\"term\">Died: </span>\n                    <span>{died}</span>\n                </li>\n                <li className=\"list-group-item d-flex justify-content-between\">\n                    <span className=\"term\">Culture: </span>\n                    <span>{culture}</span>\n                </li>\n            </ul>\n        </>\n    )\n}","import RandomChar from './randomChar';\n\nexport default RandomChar;","import ItemList from './itemList';\n\nexport default ItemList;","import React, {Component} from 'react';\nimport gotService from '../../services/gotServices';\nimport Spinner from '../spinner';\nimport './itemList.css';\n\nexport default class ItemList extends Component {\n\n    gotService = new gotService();\n    state = {\n        charList: null\n    }\n\n    componentDidMount () {\n        this.gotService.getAllCharacters()\n            .then((charList) => {\n                this.setState({\n                    charList\n                })\n            });\n    }\n\n    renderItems = (arr) => {\n        return arr.map((item, i) => {\n\n            // const {id, }\n\n            return (\n                <li \n                    key={i}\n                    className=\"list-group-item\"\n                    onClick={() => this.props.onCharSelected(i)}>\n                    {item.name}\n                </li>\n                \n            )\n        })\n    }\n\n    render() {\n\n        const {charList} = this.state;\n\n\n        if (!charList) {\n            return <Spinner/>\n        }\n\n        const items = this.renderItems(charList);\n\n        return (\n            <ul className=\"item-list list-group\">\n                {items}\n            </ul>\n        );\n    }\n}","import CharDetails from './charDetails';\n\nexport default CharDetails;","import React, {Component} from 'react';\nimport './charDetails.css';\nimport gotService from '../../services/gotServices';\n\nexport default class CharDetails extends Component {\n\n    gotService = new gotService();\n\n    state = {\n        char: null\n    }\n\n    componentDidMount () {\n        this.updateCharacter();\n    }\n\n    componentDidUpdate (prevProps) {\n        if (this.props.charId !== prevProps.charId) {\n            this.updateCharacter();\n        }\n    }\n\n    updateCharacter () {\n        const {charId} = this.props;\n\n        if (!charId) {\n            return;\n        };\n        \n        this.gotService.getCharacter(charId)\n            .then((char) => {\n                this.setState({char})\n            });\n    }\n\n    render() {\n        \n        if (!this.state.char) {\n            return <span className=\"select-error\">Please, select a character</span>\n        }\n\n        const {name, gender, born, died, culture} = this.state.char;\n\n\n        return (\n            <div className=\"person-details rounded\">\n                <h4>{name}</h4>\n                <ul className=\"list-group list-group-flush\">\n                    <li className=\"list-group-item d-flex justify-content-between\">\n                        <span className=\"term\">Gender</span>\n                        <span>{gender}</span>\n                    </li>\n                    <li className=\"list-group-item d-flex justify-content-between\">\n                        <span className=\"term\">Born</span>\n                        <span>{born}</span>\n                    </li>\n                    <li className=\"list-group-item d-flex justify-content-between\">\n                        <span className=\"term\">Died</span>\n                        <span>{died}</span>\n                    </li>\n                    <li className=\"list-group-item d-flex justify-content-between\">\n                        <span className=\"term\">Culture</span>\n                        <span>{culture}</span>\n                    </li>\n                </ul>\n            </div>\n        );\n    }\n}","import App from './app';\n\nexport default App;","import React, { Component } from 'react';\nimport {Col, Row, Container} from 'reactstrap';\n\nimport Header from '../header';\nimport RandomChar from '../randomChar';\nimport ItemList from '../itemList';\nimport CharDetails from '../charDetails';\nimport ErrorMessage from '../errorMessage';\n\nimport './app.css';\n\nexport default class App extends Component {\n    \n    state = {\n        showRandomChar: true,\n        selectedChar: 130,\n        error: false\n    }\n\n    toggleRandomChar = () => {\n        this.setState((state) => {\n            return {\n                showRandomChar: !state.showRandomChar\n            }\n        });\n    }\n\n    onCharSelected = (id) => {\n        this.setState({\n            selectedChar: id\n        });\n    }\n\n    render () {\n\n        if ( this.state.error ) {\n            return <ErrorMessage/>\n        }\n\n        const char = this.state.showRandomChar ? <RandomChar/> : null;\n\n        return (\n            <>\n                <Container>\n                    <Header/>\n                </Container>\n                <Container>\n                    <Row>\n                        <Col lg={{size: 5, offset: 0}}>\n                            {char}\n                            <button \n                                    className=\"toggle-btn\"\n                                    onClick={this.toggleRandomChar}>Toggle random character</button>\n                        </Col>\n                    </Row>\n                    <Row>\n                        <Col md='6'>\n                            <ItemList onCharSelected={this.onCharSelected}/>\n                        </Col>\n                        <Col md='6'>\n                            <CharDetails charId={this.state.selectedChar}/>\n                        </Col>\n                    </Row>\n                </Container>\n            </>\n        );    \n    }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/app';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './index.css';\n\nReactDOM.render(<App/>, document.getElementById('root'));\n"],"sourceRoot":""}